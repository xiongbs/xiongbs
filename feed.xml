<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://xiongbs.github.io//xiongbs/</id><title>beni blog</title><subtitle>Jekyll blog, Beni blog, front-end, full-stack js senior developer blog</subtitle> <updated>2023-04-21T14:27:00+08:00</updated> <author> <name>beni</name> <uri>https://xiongbs.github.io//xiongbs/</uri> </author><link rel="self" type="application/atom+xml" href="https://xiongbs.github.io//xiongbs/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://xiongbs.github.io//xiongbs/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2023 beni </rights> <icon>/xiongbs/assets/img/favicons/favicon.ico</icon> <logo>/xiongbs/assets/img/favicons/favicon-96x96.png</logo> <entry><title>文本highlight 和 numberic character reference 解析emoji和HTML Entities 实体符号</title><link href="https://xiongbs.github.io//xiongbs/posts/numberic-charactor-reference/" rel="alternate" type="text/html" title="文本highlight 和 numberic character reference 解析emoji和HTML Entities 实体符号" /><published>2022-12-06T14:36:01+08:00</published> <updated>2022-12-06T14:36:01+08:00</updated> <id>https://xiongbs.github.io//xiongbs/posts/numberic-charactor-reference/</id> <content src="https://xiongbs.github.io//xiongbs/posts/numberic-charactor-reference/" /> <author> <name>beni</name> </author> <category term="diary" /> <summary> 文本highlight 和 numberic character reference 解析emoji和HTML 需求：需要搜索结果高亮文本，查看NG-ZORRO ng-zorro-antd源码如何实现，源码如下，发现了一段有趣的正则处理 /** * Use of this source code is governed by an MIT-style license that can be * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE */ import { Pipe, PipeTransform } from '@angular/core'; // Regular Expressions for parsing tags and... </summary> </entry> <entry><title>从tcp看网站的加载体积限制在14kb</title><link href="https://xiongbs.github.io//xiongbs/posts/why-your-website-14kb/" rel="alternate" type="text/html" title="从tcp看网站的加载体积限制在14kb" /><published>2022-10-21T11:06:19+08:00</published> <updated>2022-10-21T11:06:19+08:00</updated> <id>https://xiongbs.github.io//xiongbs/posts/why-your-website-14kb/</id> <content src="https://xiongbs.github.io//xiongbs/posts/why-your-website-14kb/" /> <author> <name>beni</name> </author> <category term="diary" /> <category term="translation" /> <summary> 为什么你的网站限制在14kb的大小比较好 译文：WHY YOUR WEBSITE SHOULD BE UNDER 14KB IN SIZE 网页的内容越小，加载越快。 14kb的大小比15kb的带下明显要快，大约要快612ms(译者待求证), 然而15kb和16kb之间的效果就比较小。（trivial：琐碎） 以上效果的原因就是因为TCP的慢启动算法，本文将介绍什么是慢**算法，它怎么工作，且你应该关注的点有哪些。但是在这之前，我们先快速过一下 TCP 基础。 什么是TCP Transmission Control Protocol (TCP) 使用 Internet Protocol (IP) =&amp;gt; TCP/IP acknowledgement or ACK（承认, 感谢, 承认书）认可对方 具体请查阅TCP 什么是TCP慢启动 TCP慢启动主要是TCP服... </summary> </entry> <entry><title>Angular DI &amp; Reflect.metadata</title><link href="https://xiongbs.github.io//xiongbs/posts/AngularDI-Reflect.metadata/" rel="alternate" type="text/html" title="Angular DI &amp; Reflect.metadata" /><published>2022-08-24T15:40:08+08:00</published> <updated>2022-08-24T15:40:08+08:00</updated> <id>https://xiongbs.github.io//xiongbs/posts/AngularDI-Reflect.metadata/</id> <content src="https://xiongbs.github.io//xiongbs/posts/AngularDI-Reflect.metadata/" /> <author> <name>beni</name> </author> <category term="Blogging" /> <category term="FrontEnd" /> <summary> 从Reflect.metaData 看Angular DI依赖注入的思想 文章参考 </summary> </entry> <entry><title>Chemical Formula(Bytedance)</title><link href="https://xiongbs.github.io//xiongbs/posts/chemical-formula/" rel="alternate" type="text/html" title="Chemical Formula(Bytedance)" /><published>2022-08-19T17:29:17+08:00</published> <updated>2023-04-21T14:24:58+08:00</updated> <id>https://xiongbs.github.io//xiongbs/posts/chemical-formula/</id> <content src="https://xiongbs.github.io//xiongbs/posts/chemical-formula/" /> <author> <name>beni</name> </author> <category term="Blogging" /> <category term="FrontEnd" /> <category term="Alogrithem" /> <summary> 给定一个用字符串展示的化学公式，计算每种元素的个数。 规则如下： 元素命名采用驼峰命名，例如 Mg () 代表内部的基团，代表阴离子团 [] 代表模内部链节通过化学键的连接，并聚合 例如：H2O =&amp;gt; H2O1 Mg(OH)2 =&amp;gt; H2Mg1O2 格式 输入： 化学公式的字符串表达式，例如：K4[ON(SO3)2]2 。 输出： 元素名称及个数：K4N2O14S4，并且按照元素名称升序排列。 示例 输入： K4[ON(SO3)2]2 输出： K4N2O14S4 我的代码 function parseChemical(str) { if (!str) { return str; } const ans = generateSubstr(str, 1); if (!ans) {... </summary> </entry> <entry><title>Angular build refactor</title><link href="https://xiongbs.github.io//xiongbs/posts/angular-build-refactor/" rel="alternate" type="text/html" title="Angular build refactor" /><published>2022-08-05T13:51:23+08:00</published> <updated>2022-08-05T13:51:23+08:00</updated> <id>https://xiongbs.github.io//xiongbs/posts/angular-build-refactor/</id> <content src="https://xiongbs.github.io//xiongbs/posts/angular-build-refactor/" /> <author> <name>beni</name> </author> <category term="Blogging" /> <category term="FrontEnd" /> <summary> 项目中Angular升级以来，一直没有对打包做过深度得优化处理，基本得目标能跑通即可。本地修改主要优化打包速度，主要是 移除那些deadcode，重复得code，提升打包性能，并且支持npm高版本install，保证依赖检查可以正常工作，不必使用(–legacy-peer-deps), 保证npm和node得更新适配; 通过打包优化，对打包和包版本增加更深入得了解 Smartcmp angular 打包优化 package.json/package-lock.json 包优化 去除遗留require.js 打包体积优化 todo, 由难易程度罗列剩下打包优化List，为整体打包做准备 线上打包完整时间分析 triggered 15：38 git load remote repository 15:38 - 15:42 bash package.s... </summary> </entry> </feed>
